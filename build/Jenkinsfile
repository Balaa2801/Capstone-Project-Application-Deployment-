pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
		    sh 'chmod +x build/build.sh'
                    sh './build/build.sh'
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                script {
                    if (env.BRANCH_NAME == 'dev') {
                        withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_HUB_USERNAME', passwordVariable: 'DOCKER_HUB_PASSWORD')]) {
                            sh "docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD"
                            sh "docker tag my-app:latest $DOCKER_HUB_USERNAME/dev:latest"
                            sh "docker push $DOCKER_HUB_USERNAME/dev:latest"
                        }
                    } else if (env.BRANCH_NAME == 'master') {
                        withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_HUB_USERNAME', passwordVariable: 'DOCKER_HUB_PASSWORD')]) {
                            sh "docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD"
                            sh "docker tag my-app:latest $DOCKER_HUB_USERNAME/prod:latest"
                            sh "docker push $DOCKER_HUB_USERNAME/prod:latest"
                        }
                    }
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
		    sh 'chmod +x build/deploy.sh'
                    if (env.BRANCH_NAME == 'dev') {
                        sh './build/deploy.sh dev'
                    } else if (env.BRANCH_NAME == 'master') {
                        sh './build/deploy.sh prod'
                    }
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}

